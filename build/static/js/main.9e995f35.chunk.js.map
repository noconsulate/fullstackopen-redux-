{"version":3,"sources":["services/entries.js","Components/Searchform.js","Components/Personform.js","Components/Numbers.js","Components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newNoteObject","post","person","delete","id","update","put","Searchform","props","value","searchName","onChange","handleSearch","Personform","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","onClick","Numbers","persons","map","key","name","number","Notification","message","style","color","background","borderStyle","borderColor","padding","margin","width","App","useState","setPersons","setNewName","setNewNumber","setSearchName","showAll","setShowAll","notification","setNotification","useEffect","entries","namesToShow","filter","toLocaleLowerCase","includes","event","target","preventDefault","result","find","window","confirm","catch","error","setTimeout","concat","entry","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e995f35.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addNewNote = (newNoteObject) => {\r\n  const request = axios.post(baseUrl, newNoteObject);\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (person) => {\r\n  const request = axios.delete(`${baseUrl}/${person.id}`)\r\n  return request.then(response => response.data);\r\n}\r\n\r\nconst changePerson = (person, update) => {\r\n  const request = axios.put(`${baseUrl}/${person.id}`, update)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n  getAll,\r\n  addNewNote,\r\n  deletePerson,\r\n  changePerson,\r\n}","import React from 'react'\r\n\r\n\r\nconst Searchform = (props) => (\r\n  <div>\r\n    <form>\r\n      filter shown with <input value={props.searchName}\r\n      onChange={props.handleSearch} />\r\n    </form>\r\n  </div>\r\n)\r\n\r\nexport default Searchform","import React from 'react'\r\n\r\nconst Personform = (props) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={props.addName}>\r\n        <div>\r\n          name: <input value={props.newName} onChange={props.handleNameChange} />\r\n        </div>\r\n        <div>\r\n          number: <input value={props.newNumber} onChange={props.handleNumberChange} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={props.addName}>add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Personform","import React from 'react'\r\n\r\nconst Numbers = (props) => {\r\n  const row = () => props.persons.map(person =>\r\n      <div key={person.id}>{person.name} {person.number}\r\n      <button onClick={props.delete(person)}> \r\n        delete\r\n      </button>\r\n      </div>\r\n  )\r\n  return (\r\n    <div>\r\n      {row()}\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default Numbers","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n  const style = {\r\n    color: 'white',\r\n    background: 'black',\r\n    borderStyle: 'solid',\r\n    borderColor: 'orange',\r\n    padding: '5px',\r\n    margin: '10px',\r\n    width: '500px',\r\n  }\r\n\r\n  if (message === null) return null\r\n\r\n  return (\r\n    <div style={style}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport entries from './services/entries'\nimport Searchform  from './Components/Searchform' \nimport Personform from './Components/Personform'\nimport Numbers from './Components/Numbers'\nimport Notification from './Components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ searchName, setSearchName] = useState('')\n  const [ showAll, setShowAll] = useState(true)\n  const [ notification, setNotification] = useState(null)\n\n  useEffect(() => {\n    entries.getAll().then(response => {\n      setPersons(response);\n    })\n  }, [])\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addName = (event) => {\n    event.preventDefault();\n    const newNoteObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const result = persons.find(person => person.name === newNoteObject.name)\n    if (result) {\n      if(window.confirm(`${result.name} found, update?`)) {\n        entries.changePerson(result, newNoteObject).then(response => {\n          setPersons(persons.map(person => \n            person.id !== result.id ? person : response))\n        }).catch(error => {\n          setNotification(`${result.name} has been deleted from the server`)\n          setTimeout(() => {setNotification(null)}, 5000)\n          setPersons(persons.filter(person => person.id !== result.id))\n        })\n      }\n    } else {\n        entries.addNewNote(newNoteObject).then(response => {\n          setPersons(persons.concat(response))\n        })\n        setNotification(`${newNoteObject.name} has been added`)\n        setTimeout(() => {\n          setNotification(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      }\n  }\n\n  const namesToShow = showAll ? \n  persons :\n  persons.filter(person => person.name.toLocaleLowerCase().includes(searchName.toLocaleLowerCase()))\n  \n\n  const handleSearch = (event) => {\n    setSearchName(event.target.value)\n    if (searchName === '') {\n      setShowAll(true)\n    } else {\n      setShowAll(false)\n    }\n  }\n\n  const deletePerson = (entry) => {\n    return () => {\n      if (window.confirm(`delete ${entry.name}?`)) {\n        entries.deletePerson(entry).then(response => {\n          setPersons(persons.filter(person =>\n            person.name !== entry.name ))\n        })\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Searchform searchName={searchName} handleSearch={handleSearch} />\n      <h2>add a new</h2>\n      <Personform  addName={addName} newName={newName} handleNameChange={handleNameChange}\n      newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Numbers persons={namesToShow} delete={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, \n  document.getElementById('root'))"],"sourceRoot":""}